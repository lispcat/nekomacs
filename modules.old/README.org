#+title: Modules

* Table of Contents :TOC:
- [[#preface][Preface]]
  - [[#tips][Tips]]
- [[#info][Info]]
  - [[#about-require][About ~+require~]]
- [[#personal-notes][Personal notes]]
- [[#subdirectories][Subdirectories]]
  - [[#completion][completion]]
  - [[#enhancements][enhancements]]
  - [[#files][files]]
  - [[#ide][ide]]
  - [[#keybinds][keybinds]]
  - [[#lang][lang]]
  - [[#org][org]]
  - [[#prettify][prettify]]
  - [[#programs][programs]]
  - [[#special][special]]
  - [[#tweaks][tweaks]]
  - [[#ui][ui]]

* Preface

** Tips

- For any ~function~ or ~variable~ name, you can pull up further documentation by typing =C-h f= for functions and =C-h v= for variables.
- You can also type =C-h h= with the text cursor on the function or variable name to directly pull up its documentation.

* Info

The =modules= directory contains a large number of code snippets that can be evaluated with
#+begin_src emacs-lisp
(+require 'module-name)
#+end_src>

** About ~+require~

The ~+require~ function loads a module (aka "feature") if it hasn't been loaded yet. It searches for it in the ~load-path~.

~+require~ is also just a wrapper around the ~require~ function, with added soft-error handling---to prevent Emacs from outright crashing at startup if it errors---and optional benchmarking (prints how long it took to evaluate if the variable ~neko-benchmark~ is enabled).

For more info, type =C-h= then search for =+require= to pull up further documentation.

* Personal notes

- organize dirs in terms of leader key bind prefix
- script to generate Directory heading:
  - locate every README.org recursively from the parent directory and create TOC-like links page.
- also create script to generate heading-based list below, with every sublist.

* Subdirectories

** completion
[[file:completion/README.org]]

** enhancements

** files

** ide

** keybinds

** lang
[[file:lang/README.org]]

** org

** prettify

** programs

** special

** tweaks

** ui
